package cn.kinder.util;import android.text.Editable;import android.text.TextWatcher;import android.util.Log;import android.widget.EditText;import android.widget.TextView;/**收集常用的监听类、工具类等*/public class Common_Utils {	/**EditText监听*/	public static TextWatcher editListener(final EditText mEditText,final int MAX_COUNT)	{	 final TextWatcher mTextWatcher = new TextWatcher()		 {			private int editStart;			private int editEnd;			public void afterTextChanged(Editable s) {				editStart = mEditText.getSelectionStart();				editEnd = mEditText.getSelectionEnd();				// 先去掉监听器，否则会出现栈溢出				mEditText.removeTextChangedListener(this);				// 注意这里只能每次都对整个EditText的内容求长度，不能对删除的单个字符求长度				// 因为是中英文混合，单个字符而言，calculateLength函数都会返回1				while (calculateLength(s.toString()) >= MAX_COUNT) 				{ // 当输入字符个数超过限制的大小时，进行截断操作					try{						s.delete(editStart - 1, editEnd);						editStart--;						editEnd--;					}catch(IndexOutOfBoundsException e){						return;					}														}				mEditText.setText(s);				mEditText.setSelection(editStart);				// 恢复监听器				mEditText.addTextChangedListener(this);				//setLeftCount(mEditText,mTextView,MAX_COUNT);			}			public void beforeTextChanged(CharSequence s, int start, int count,					int after) {			}			public void onTextChanged(CharSequence s, int start, int before,					int count) {			}		};		return mTextWatcher;	}	/**	 * 计算EditText的字数，一个汉字=两个英文字母，一个中文标点=两个英文标点 	 * 注意：该函数的不适用于对单个字符进行计算，因为单个字符四舍五入后都是1	 * @param c	 * @return	 */	public static long calculateLength(CharSequence c) 	{		double len = 0;		for (int i = 0; i < c.length(); i++) 		{			int tmp = (int) c.charAt(i);			if (tmp > 0 && tmp < 127) 			{				len += 0.5;			} else 			{				len++;			}		}		return Math.round(len);	}}